输入&输出
================

输入/\输出所包含的指令主要分为四部分：控制管脚的输入输出（按信号类型可分为数字信号和模拟信号）、中断、脉冲长度及ShiftOut。

* 输入输出：数字输入、数字输出、模拟输入、模拟输出、
* 中断控制：定义中断，取消中断
* 脉冲长度
* 移位输出

.. image:: images/02/inout1.png

数字输出
--------------

.. image:: images/02/digitalWrite.png

描述
++++++++++++++

.. note::
	给一个数字引脚写入HIGH或者LOW。

.. Attention::
	数字13号引脚难以作为数字输入使用，因为大部分的控制板上使用了一颗LED与一个电阻连接到他。如果启动了内部的20K上拉电阻，他的电压将在1.7V左右，而不是正常的5V，因为板载LED串联的电阻把他使他降了下来，这意味着他返回的值总是LOW。如果必须使用数字13号引脚的输入模式，需要使用外部上拉下拉电阻。

参数
+++++++++++++++
* 管脚: 引脚编号（如1,5,10，A0，A3）

* 值: 高 或 低

范例
+++++
将13号端口设置为高电平，延迟一秒，然后设置为低电平，再延迟一秒，如此往复。

.. image:: images/02/digitalWrite-example.png

注释
+++++++++
模拟引脚也可以当做数字引脚使用，使用方法是输入端口A0，A1，A2等。

数字输入
--------------

.. image:: images/02/digitalRead.png

描述
++++++++++++++

.. note::
	读取指定引脚的值，HIGH或LOW。

参数
+++++++++++++++
* 管脚: 引脚编号（如1,5,10，A0，A3）

返回
+++++++++
HIGH 或 LOW

范例
+++++
读取数字0号引脚的值，并通过串口打印出来。

.. image:: images/02/digitalRead-example.png

注释
+++++++++
.. Attention::
	如果引脚悬空，digitalRead()会返回HIGH或LOW（随机变化）。

模拟输出
--------------

.. image:: images/02/analogRead.png

描述
++++++++++++++

.. note::
	从指定的模拟引脚读取数据值。

	Arduino板包含一个6通道（Mini和Nano有8个通道，Mega有16个通道），10位模拟数字转换器。这意味着它将0至5伏特之间的输入电压映射到0至1023之间的整数值。

参数
+++++++++++++++
* 管脚: 引脚编号（如A0,A1,A2,A3）不同的开发板模拟输入引脚数量不一样。

返回
+++++++++
arduino:从0到1023的整数值

范例
+++++
读取模拟A0引脚的值，并通过串口打印出来。

.. image:: images/02/analogRead-example.png

注释
+++++++++
.. Attention::
	如果模拟输入引脚没有连入电路，由analogRead()返回的值将根据多项因素（例如其他模拟输入引脚，你的手靠近板子等）产生波动。

中断指令
--------------

.. image:: images/02/interrupt.png

描述
++++++++++++++

.. note::
	当发生外部中断时，调用一个指定函数。当中断发生时，该函数会取代正在执行的程序。

	大多数的Arduino板有两个外部中断：0（数字引脚2）和1（数字引脚3）。

	arduino Mege有四个外部中断：数字2（引脚21），3（20针），4（引脚19），5（引脚18）。

	Esp8266 、ESP32系列有更多中断。

参数
+++++++++++++++
* 管脚: 引脚编号（如2,3）不同的开发板中断引脚不一样。
* 模式：
	改变：当引脚电平发生改变时，触发中断

	上升：当引脚由低电平变为高电平时，触发中断

	下降：当引脚由高电平变为低电平时，触发中断

范例
+++++
利用中断，控制13号引脚的LED亮灭。

.. image:: images/02/interrupt-example.png

注释
+++++++++
.. Attention::
	当中断函数发生时，delay()和millis()的数值将不会继续变化。当中断发生时，串口收到的数据可能会丢失。你应该声明一个变量来在未发生中断时储存变量。


取消中断
--------------

.. image:: images/02/detachinterrupt.png

描述
++++++++++++++

.. note::
	关闭给定的中断。

参数
+++++++++++++++
* 管脚: 引脚编号（如2,3）不同的开发板中断引脚不一样。


脉冲长度
-------------------
.. image:: images/02/pulseIn.png

描述
++++++++++++++

.. note::
	读取一个引脚的脉冲（HIGH或LOW）。

	例如，如果value是HIGH，pulseIn()会等待引脚变为HIGH，开始计时，再等待引脚变为LOW并停止计时。返回脉冲的长度，单位微秒。如果在指定的时间内无脉冲，函数返回。
	此函数的计时功能由经验决定，长时间的脉冲计时可能会出错。计时范围从10微秒至3分钟。（1秒=1000毫秒=1000000微秒）

参数
+++++++++++++++
* 管脚:你要进行脉冲计时的引脚号（int）。

* 状态:要读取的脉冲类型，HIGH或LOW（int）。

* 超时 (可选）:指定脉冲计数的等待时间，单位为微秒，默认值是1秒（unsigned long）。

返回
++++++++++++++++++++++
脉冲长度（微秒），如果等待超时返回0（unsigned long）

范例
+++++
读取6号引脚脉冲时长。

.. image:: images/02/pulseIn-example.png

ShiftOut
-----------------
.. image:: images/02/ShiftOut.png

描述
++++++++++++++

.. note::
	将一个数据的一个字节一位一位的移出。从最高有效位（最左边）或最低有效位（最右边）开始。依次向数据脚写入每一位，之后时钟脚被拉高或拉低，指示刚才的数据有效。

参数
+++++++++++++++
* 数据管脚：输出每一位数据的引脚(int)

* 时钟管脚：时钟脚，当数据管脚有值时此引脚电平变化(int)

* 顺序：输出位的顺序，最高位优先或最低位优先

* value: 要移位输出的数据(byte)
