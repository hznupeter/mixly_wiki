# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Mixly Team
# This file is distributed under the same license as the Mixly Wiki package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mixly Wiki 0.999\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-13 21:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/arduino/03.Control.rst:2
msgid "控制(普通视图)"
msgstr ""

#: ../../source/arduino/03.Control.rst:4
msgid "控制类别中包括了时间延迟、条件执行、循环执行、获取运行时间、初始化、Switch执行等 控制模块中主要执行的内容是对程序结构进行的相应控制。"
msgstr ""

#: ../../source/arduino/03.Control.rst:10
msgid "初始化"
msgstr ""

#: ../../source/arduino/03.Control.rst:15
#: ../../source/arduino/03.Control.rst:70
#: ../../source/arduino/03.Control.rst:106
#: ../../source/arduino/03.Control.rst:150
#: ../../source/arduino/03.Control.rst:237
#: ../../source/arduino/03.Control.rst:291
#: ../../source/arduino/03.Control.rst:344
#: ../../source/arduino/03.Control.rst:394
#: ../../source/arduino/03.Control.rst:435
#: ../../source/arduino/03.Control.rst:482
#: ../../source/arduino/03.Control.rst:497
msgid "描述"
msgstr ""

#: ../../source/arduino/03.Control.rst:18
msgid "在Arduino中程序运行时将首先调用 setup()函数。 用于初始化变量、设置针脚的输出\\输入类型、配置串口、引入类库文件等等。"
msgstr ""

#: ../../source/arduino/03.Control.rst:21
msgid "每次 Arduino 上电或重启后，setup 函数只运行一次。"
msgstr ""

#: ../../source/arduino/03.Control.rst:25
#: ../../source/arduino/03.Control.rst:43
#: ../../source/arduino/03.Control.rst:81
#: ../../source/arduino/03.Control.rst:116
#: ../../source/arduino/03.Control.rst:166
#: ../../source/arduino/03.Control.rst:206
#: ../../source/arduino/03.Control.rst:259
#: ../../source/arduino/03.Control.rst:312
#: ../../source/arduino/03.Control.rst:362
#: ../../source/arduino/03.Control.rst:410
#: ../../source/arduino/03.Control.rst:446
msgid "范例"
msgstr ""

#: ../../source/arduino/03.Control.rst:27
msgid "初始化时声明变量。"
msgstr ""

#: ../../source/arduino/03.Control.rst:44
msgid "在初始化时定义中断函数。"
msgstr ""

#: ../../source/arduino/03.Control.rst:65
msgid "while 循环"
msgstr ""

#: ../../source/arduino/03.Control.rst:73
msgid ""
"while循环会无限的循环，直到括号内的判断语句变为假。 "
"必须要有能改变判断语句的东西，要不然while循环将永远不会结束。你可以使用一个传感器的值，或者一个变量来控制什么时候停止该循环。"
msgstr ""

#: ../../source/arduino/03.Control.rst:77
#: ../../source/arduino/03.Control.rst:112
#: ../../source/arduino/03.Control.rst:156
#: ../../source/arduino/03.Control.rst:247
#: ../../source/arduino/03.Control.rst:299
#: ../../source/arduino/03.Control.rst:352
msgid "参数"
msgstr ""

#: ../../source/arduino/03.Control.rst:78
msgid "满足条件：为真或为假的一个条件。"
msgstr ""

#: ../../source/arduino/03.Control.rst:83
msgid "当温度高于30度时，亮灯，否则灭灯。"
msgstr ""

#: ../../source/arduino/03.Control.rst:101
msgid "延时"
msgstr ""

#: ../../source/arduino/03.Control.rst:109
msgid "使程序暂定设定的时间（单位毫秒）。（一秒等于1000毫秒）。"
msgstr ""

#: ../../source/arduino/03.Control.rst:113
msgid "毫秒：暂停的毫秒数。"
msgstr ""

#: ../../source/arduino/03.Control.rst:118
msgid "13号引脚灯亮1秒，灭1秒，往复循环。"
msgstr ""

#: ../../source/arduino/03.Control.rst:136
#: ../../source/arduino/03.Control.rst:228
#: ../../source/arduino/03.Control.rst:282
#: ../../source/arduino/03.Control.rst:335
#: ../../source/arduino/03.Control.rst:385
#: ../../source/arduino/03.Control.rst:471
msgid "注释"
msgstr ""

#: ../../source/arduino/03.Control.rst:138
msgid "虽然创建一个使用delay()的闪烁LED很简单，并且许多例子将很短的delay用于消除开关抖动。"
msgstr ""

#: ../../source/arduino/03.Control.rst:140
msgid "但delay()确实拥有很多显著的缺点。在delay函数使用的过程中，读取传感器值、计算、引脚操作均无法执行，因此，它所带来的后果就是使其他大多数活动暂停。大多数熟练的程序员通常避免超过10毫秒的delay(),除非arduino程序非常简单。"
msgstr ""

#: ../../source/arduino/03.Control.rst:142
msgid "利用定时器，就可以解决这个问题，可以避免由于delay()带来的CPU暂停，也能很好地实现每隔一定时间执行动作。"
msgstr ""

#: ../../source/arduino/03.Control.rst:145
msgid "如果(if)"
msgstr ""

#: ../../source/arduino/03.Control.rst:153
msgid "if 语句与比较运算符一起用于检测某个条件是否达成，如某个传感器的值是否等于某个值。"
msgstr ""

#: ../../source/arduino/03.Control.rst:157
msgid "条件：比较表达式"
msgstr ""

#: ../../source/arduino/03.Control.rst:160
#: ../../source/arduino/03.Control.rst:253
#: ../../source/arduino/03.Control.rst:306
#: ../../source/arduino/03.Control.rst:356
#: ../../source/arduino/03.Control.rst:404
#: ../../source/arduino/03.Control.rst:441
#: ../../source/arduino/03.Control.rst:488
#: ../../source/arduino/03.Control.rst:503
msgid "用法"
msgstr ""

#: ../../source/arduino/03.Control.rst:161
msgid "增加条件：如果需要增加条件，可以点开齿轮，然后将左侧的“否则如果”或者“否则”模块拖到右侧的“如果”之中。"
msgstr ""

#: ../../source/arduino/03.Control.rst:168
msgid "当连接在2号引脚的按键按下时，点亮13号引脚的灯。"
msgstr ""

#: ../../source/arduino/03.Control.rst:185
msgid "如果判断的条件大于等于1时，可以省略等于判断，因为只要 该表达式的结果不为0，则为真。"
msgstr ""

#: ../../source/arduino/03.Control.rst:187
msgid "所以，上面的写法与下面的写法等效。"
msgstr ""

#: ../../source/arduino/03.Control.rst:208
msgid "当连接在2号引脚的按键按下时，点亮13号引脚的灯;当按键松开时，灯灭。"
msgstr ""

#: ../../source/arduino/03.Control.rst:229
msgid "另外一种进行多种条件分支判断的语句是switch case语句。"
msgstr ""

#: ../../source/arduino/03.Control.rst:232
msgid "如果(switch)"
msgstr ""

#: ../../source/arduino/03.Control.rst:240
msgid "和if语句相同，switch…case通过设定的在不同条件下执行的代码控制程序的流程。"
msgstr ""

#: ../../source/arduino/03.Control.rst:242
msgid "特别地，switch语句将变量值和case语句中设定的值进行比较。当一个case语句中的设定值与变量值相同时，这条case语句将被执行。"
msgstr ""

#: ../../source/arduino/03.Control.rst:244
msgid "关键字break可用于退出switch语句，通常每条case语句都以break结尾。如果没有break语句，switch语句将会一直执行接下来的语句（一直向下）直到遇见一个break，或者直到switch语句结尾。"
msgstr ""

#: ../../source/arduino/03.Control.rst:248
msgid "var: 用于与下面的case中的标签进行比较的变量值"
msgstr ""

#: ../../source/arduino/03.Control.rst:250
msgid "label: 与变量进行比较的值"
msgstr ""

#: ../../source/arduino/03.Control.rst:254
msgid "增加case：如果需要增加条件，可以点开齿轮，然后将左侧的“case”或者“default”模块拖到右侧的“switch”之中。"
msgstr ""

#: ../../source/arduino/03.Control.rst:261
msgid "当连接在2号引脚的按键按下时，点亮13号引脚的灯，否则13号引脚的灯灭"
msgstr ""

#: ../../source/arduino/03.Control.rst:283
msgid "每个switch可以有多个case，但是最多不超过一个default，当不满足任何一个case时，执行default中的程序。"
msgstr ""

#: ../../source/arduino/03.Control.rst:286
msgid "for循环"
msgstr ""

#: ../../source/arduino/03.Control.rst:294
msgid "for循环用于重复执行一段的程序。通常使用一个增量计数器计数并终止循环。"
msgstr ""

#: ../../source/arduino/03.Control.rst:296
msgid "for循环用于重复性的操作非常有效，通常与数组结合起来使用来操作数据、引脚。"
msgstr ""

#: ../../source/arduino/03.Control.rst:300
msgid "变量名：用于记录for循环次数的变量名。"
msgstr ""

#: ../../source/arduino/03.Control.rst:301
msgid "起始值：循环的计数起始值，一般从0开头，也可以从其他数值开始。"
msgstr ""

#: ../../source/arduino/03.Control.rst:302
msgid "终点值：循环的计数终点值。"
msgstr ""

#: ../../source/arduino/03.Control.rst:303
msgid "步长：每次循环的步长，一般为1，也可以是其他整数。"
msgstr ""

#: ../../source/arduino/03.Control.rst:307
msgid "可自行设置循环的变量名称，并确定循环的开始和终止以及循环方向，最后一个数字可以为负数。"
msgstr ""

#: ../../source/arduino/03.Control.rst:314
msgid "将连接在3号引脚的灯制作成呼吸灯，每一次亮度变化之间间隔50毫秒"
msgstr ""

#: ../../source/arduino/03.Control.rst:336
msgid "for循环中定义的变量有名字，可以用字母i,j,k或单词red,state等有意义的词语表示。"
msgstr ""

#: ../../source/arduino/03.Control.rst:339
msgid "跳出循环"
msgstr ""

#: ../../source/arduino/03.Control.rst:347
msgid "跳出循环用于终止一段重复的程序，一般使用时作为条件语句的执行部分，当循环中的变量满足某个条件时，执行跳出循环语句。"
msgstr ""

#: ../../source/arduino/03.Control.rst:349
msgid "跳出循环在处理循环中的特殊情况时十分有用。"
msgstr ""

#: ../../source/arduino/03.Control.rst:353
msgid "操作：可以选择跳出循环和跳到下一个循环两种操作，结果不同。"
msgstr ""

#: ../../source/arduino/03.Control.rst:357
msgid "可直接加到循环语句当中，一般自行添加条件语句进行判断，判断为真时执行跳出循环语句。"
msgstr ""

#: ../../source/arduino/03.Control.rst:364
msgid "引脚3上的数字从0到255逐一增加，每一次增加之间间隔50毫秒，当数字增加到150时停止增加"
msgstr ""

#: ../../source/arduino/03.Control.rst:386
msgid "注意跳到下一个循环的使用，可以方便的将循环中不需要的步骤跳过。"
msgstr ""

#: ../../source/arduino/03.Control.rst:389
msgid "系统运行时间"
msgstr ""

#: ../../source/arduino/03.Control.rst:397
msgid "返回自硬件启动或重启以来的时间值。"
msgstr ""

#: ../../source/arduino/03.Control.rst:400
msgid "返回"
msgstr ""

#: ../../source/arduino/03.Control.rst:401
msgid "自硬件启动或重启以来的时间，毫秒数或者微秒数。"
msgstr ""

#: ../../source/arduino/03.Control.rst:405
msgid "返回系统运行时间，赋给某一变量，进行进一步的功能设计。"
msgstr ""

#: ../../source/arduino/03.Control.rst:412
msgid "自动换行打印系统运行时间"
msgstr ""

#: ../../source/arduino/03.Control.rst:430
msgid "MsTimer2 定时器"
msgstr ""

#: ../../source/arduino/03.Control.rst:438
msgid "每隔设置的毫秒数执行相应的程序"
msgstr ""

#: ../../source/arduino/03.Control.rst:442
msgid "设置计时器的时间：计时器的时间可以进行修改。 主要用于设计定时改变状态的程序，可以通过计时器时间间隔设置进行状态会更改程序的运行。"
msgstr ""

#: ../../source/arduino/03.Control.rst:447
msgid "利用定时器控制13号引脚LED每隔1秒亮灭一次。"
msgstr ""

#: ../../source/arduino/03.Control.rst:472
msgid "利用定时器可以提高硬件的工作效率。"
msgstr ""

#: ../../source/arduino/03.Control.rst:474
msgid "但在一个程序中只能使用一个MsTimer2定时器，如果要实现多个时间的定时，可以配合变量计数来完成。"
msgstr ""

#: ../../source/arduino/03.Control.rst:477
msgid "MsTimer2 定时器启动"
msgstr ""

#: ../../source/arduino/03.Control.rst:485
msgid "MsTimer2定时器开始计时"
msgstr ""

#: ../../source/arduino/03.Control.rst:489
msgid "需要使用MsTimer2计时器时，需要先插入MsTimer2定时器启动模块，开始计时，需要与MsTimer2定时器配合使用。"
msgstr ""

#: ../../source/arduino/03.Control.rst:492
msgid "MsTimer2 定时器停止"
msgstr ""

#: ../../source/arduino/03.Control.rst:500
msgid "MsTimer2定时器停止计时"
msgstr ""

#: ../../source/arduino/03.Control.rst:504
msgid "需要使用MsTimer2计时器时，需要先插入MsTimer2定时器启动模块，开始计时，需要与MsTimer2定时器配合使用，插入停止模块后计时器停止计时。"
msgstr ""

#~ msgid "控制"
#~ msgstr ""

#~ msgid ""
#~ "时间延迟、条件执行、循环执行、获取时间、初始化、Switch执行（新增） 控制模块中主要执行的内容是对程序结构进行的相应控制。"
#~ " ## 初始化 初始化中的内容程序只执行一次，因此我们通常把一些变量的声明或函数定义（如中断）等放在初始化里。"
#~ msgstr ""

#~ msgid "条件语句"
#~ msgstr ""

#~ msgid ""
#~ "Mixly的条件语句为两个，一个是.. image:: images/03/control3.png，另一个是.."
#~ " image:: images/03/control4.png"
#~ msgstr ""

#~ msgid "以.. image:: images/03/control3.png为例："
#~ msgstr ""

#~ msgid ""
#~ "可以理解为：当按键按下（按键接管脚2）时（此时【数字输入管脚#2】状态为1，满足条件句执行条件），LED（接管脚13）点亮；否则（即按键抬起后，【数字输入"
#~ " "
#~ "管脚#2】状态为0，不满足执行条件，自动执行否则里面的内容）LED灭。在使用条件语句过程中需注意，该条件句左上角有一个小齿轮，当点击小齿轮时可得到如图"
#~ " .. image:: images/03/control7.png 把否则拉入条件句内，如图所示"
#~ msgstr ""

#~ msgid "当对条件句操作完后，需再次点击左上角的小齿轮将弹出的窗口关闭。"
#~ msgstr ""

#~ msgid "循环语句"
#~ msgstr ""

#~ msgid "控制循环语句的代码有三条。 分别是："
#~ msgstr ""

#~ msgid "循环语句的功能就是使某段代码重复运行。比如最常见的呼吸灯（手机提醒灯或者路由器的灯）。呼吸灯的效果是LED由慢慢由灭变量，后又慢慢由亮变灭的一种渐变灯。对于存在中间状态的渐变，用数字输出就无法实现了。"
#~ msgstr ""

#~ msgid ""
#~ "上图就是呼吸灯的代码。Arduino本身支持的模拟输出状态为256种，也就是0——255个数值。步长为每次循环变量增加的幅度。“使用i从0到255"
#~ " "
#~ "步长为1“可以理解为i将以每次加1的增福由0变化到255。而我们在3号管脚接的LED的值也将是0，1,2,3……最后直到255。第二个循环块原理类似。"
#~ msgstr ""

#~ msgid "该指令可以读取从代码编程开始到此时的系统时间。"
#~ msgstr ""

#~ msgid "程序范例"
#~ msgstr ""

#~ msgid "按下按键显示当前系统运行时间"
#~ msgstr ""

