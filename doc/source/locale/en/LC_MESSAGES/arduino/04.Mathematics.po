# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Mixly Team
# This file is distributed under the same license as the Mixly Wiki package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mixly Wiki 0.999\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-17 21:19+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/arduino/04.Mathematics.rst:2
msgid "数学"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:4
msgid "该部分主要完成数学变换功能，具体包括数字映射、数字约束、数学运算、取整、随机、三角函数。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:9
msgid "数字常量"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:14
#: ../../source/arduino/04.Mathematics.rst:29
#: ../../source/arduino/04.Mathematics.rst:61
msgid "描述"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:16
msgid "数字常量包括 整数常量和浮点常量。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:19
msgid "整数常量是直接在程序中使用的数字，如123。默认情况下，这些数字被视为int类型。通常情况下，整数常量默认为十进制，但可以加上特殊前缀表示为其他进制。如：B0111，表示二进制；0173,表示八进制；0x7B，表示十六进制。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:21
msgid ""
"浮点常量也可以直接中程序中使用，如12.3。默认情况下，这些数字被视为float类型。也可以使用科学计数法表示浮点数。如：2.34E5代表2.34"
" * 10^5，其实际值为234000；67E-12代表67.0 * 10^-12，其实际值为0.000000000067。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:24
msgid "数学运算"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:32
msgid "数学运算中包括加、减、乘、除、取模、幂运算。 这些运算将会返回两个操作数的和,差,乘积,商，取模、幂。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:36
msgid "这些运算是根据操作数的数据类型来计算的,比如 9和4都是int类型,所以9/4结果是2。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:38
msgid "如果想要两个整数相除得到小数，就需要将整数转换成小数。如9.0/2.0=4.5 。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:40
msgid "这也就代表如果运算结果比数据类型所能容纳的范围要大的话，就会出现溢出。例如. 1加上一个整数 int类型 32,767 结果变成-32,768。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:42
msgid "如果操作数是不同类型的,结果是“更大”的那种数据类型。如果操作数中的其中一个是 float类型或者double类型, 就变成了浮点数运算。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:45
#: ../../source/arduino/04.Mathematics.rst:295
#: ../../source/arduino/04.Mathematics.rst:313
#: ../../source/arduino/04.Mathematics.rst:338
msgid "参数"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:47
msgid "常量或变量"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:50
#: ../../source/arduino/04.Mathematics.rst:321
#: ../../source/arduino/04.Mathematics.rst:346
msgid "返回值"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:52
msgid "两个操作数的和,差,乘积,商，取模、幂。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:56
msgid "位运算"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:64
msgid "按位操作符对变量进行位级别的计算。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:67
msgid "按位与(&)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:69
msgid "按位与操作符一个&符，用在两个整型变量之间。按位与运算符对两侧的变量的每一位都进行运算。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:71
msgid "规则是：如果两个运算元都是1，则结果为1，否则输出0。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:73
msgid "如： 0011&0101=0001"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:75
msgid "在Arduino中，int类型为16位，所以在两个int表达式之间使用&会进行16个并行按位与计算。代码片段就像这样："
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:77
msgid "int a =  92;    //二进制:  0000000001011100"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:79
msgid "int b = 101;    //二进制:  0000000001100101"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:81
msgid "int c = a & b;  //结果:    0000000001000100"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:83
msgid "a和b的16位每位都进行按位与计算，计算结果存在c中，二进制结果是01000100，十进制结果是68."
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:87
msgid "按位或(|)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:89
msgid "按位或操作符是|。和&操作符类似，|操作符对两个变量的为一位都进行运算，只是运算规则不同。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:91
msgid "按位或规则：只要两个位有一个为1则结果为1，否则为0。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:93
msgid "如：0011|0101=0111"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:95
msgid "int a =  92;    // 二进制: 0000000001011100"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:97
msgid "int b = 101;    //二进制: 0000000001100101"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:99
msgid "int c = a | b;  // 结果:  0000000001111101, 或十进制的125"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:102
msgid "按位异或(^)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:104
msgid "按位异或是一个不常见的操作符，也叫做XOR（通常读作”eks-or“）。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:106
msgid "按位异或操作符用 ^ 表示。按位异或是如果两个位值相同则结果为0，否则为1。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:108
msgid "如：0011^0101=0110"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:111
msgid "左移位运算(<<)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:113
msgid "左移位运算可使左运算元中的某些位移动右运算元中指定的位数。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:115
msgid "如： int a = 5;        // 二进制数: 0000000000000101"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:118
msgid "int b = a << 3;   // 二进制数: 0000000000101000, 或十进制数：40"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:120
msgid "//当你将x左移y位时（x«y），x中最左边的y位会逐个逐个的丢失："
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:122
msgid "int a = 5;        // 二进制: 0000000000000101"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:124
msgid "int b = a << 14;  // 二进制: 0100000000000000 - 101中最左边的1被丢弃"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:126
msgid "如果你确定位移不会引起数据溢出，你可以简单的把左移运算当做对左运算元进行2的右运算元次方的操作。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:129
msgid "右移位运算(>>)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:131
msgid "右移位运算与左移位运算类似。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:135
msgid "三角函数及其他"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:140
msgid "sin"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:143
msgid "计算角度的正弦（弧度）。其结果在-1和1之间。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:145
#: ../../source/arduino/04.Mathematics.rst:155
#: ../../source/arduino/04.Mathematics.rst:165
msgid "参数: 弧度制的角度（float）"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:147
#: ../../source/arduino/04.Mathematics.rst:157
msgid "返回值:角度的正弦值（double）"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:150
msgid "cos"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:153
msgid "计算一个角度的余弦值（用弧度表示）。返回值在 -1 和 1 之间。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:160
msgid "tan"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:163
msgid "计算角度的正切（弧度）。结果在负无穷大和无穷大之间。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:167
msgid "返回值:角度的正切值"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:170
msgid "asin"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:173
msgid "反正弦函数为正弦函数sin的反函数。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:175
#: ../../source/arduino/04.Mathematics.rst:185
msgid "参数: [-1,1]"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:177
msgid "返回值:[-π/2,π/2]"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:180
msgid "acos"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:183
msgid "反余弦函数为余弦函数cos的反函数。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:187
msgid "返回值:[0,π]"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:190
msgid "atan"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:193
msgid "反正切函数为正切函数tan的反函数。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:195
msgid "参数: [-∞,∞]"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:197
msgid "返回值:(-π/2,π/2)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:201
msgid "数学运算2"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:206
msgid "取整（四舍五入）(round)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:209
msgid "返回给定值的四舍五入取整值。如round(4.1)=4;round(5.6)=6。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:211
#: ../../source/arduino/04.Mathematics.rst:221
#: ../../source/arduino/04.Mathematics.rst:231
#: ../../source/arduino/04.Mathematics.rst:241
#: ../../source/arduino/04.Mathematics.rst:251
#: ../../source/arduino/04.Mathematics.rst:261
msgid "参数: 数值或变量。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:213
msgid "返回值:给定值的四舍五入取整值"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:216
msgid "取整（取上限）(ceil)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:219
msgid "返回给定值的下一个整数，如果输入的本身就是整数，则返回自身。如ceil(4.1)=5;ceil(5.6)=6,ceil(7)=7。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:223
msgid "返回值:给定值的下一个整数或自身。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:226
msgid "取整（取下限）(floor)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:229
msgid "返回给定值的前一个整数，如果输入的本身就是整数，则返回自身。如 floor(4.1)=4;floor(5.6)=5,floor(7)=7。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:233
msgid "返回值:给定值的前一个整数或自身。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:236
msgid "取绝对值(abs)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:239
msgid "返回给定值的绝对值。如abs(4.1)=4;abs(-5.6)=5,abs(7)=7。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:243
msgid "返回值:给定值的绝对值。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:246
msgid "平方(sq)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:249
msgid "返回给定值的平方。如 sq(4)=16;sq(-5)=25,sq(7)=49。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:253
msgid "返回值:给定值的平方。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:256
msgid "平方根(sqrt)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:259
msgid "返回给定值的正平方根。如 sqrt(4)=2;sqrt(25)=5。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:263
msgid "返回值:给定值的正平方根。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:266
msgid "取最大(小)值(min/max)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:271
msgid "返回两个数值或变量中最大或最小值。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:273
msgid "参数:数值或者变量"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:275
msgid "返回值:最大值或最小值"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:278
msgid "初始化随机数(randomseed)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:283
msgid "使用randomSeed()初始化伪随机数生成器，使生成器在随机序列中的任意点开始。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:285
msgid "使用随机数之前，需要先使用初始化随机数模块。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:288
msgid "随机数(random)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:293
msgid "使用随机数模块可以产生一个给定范围之间的随机数。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:297
msgid "min - 随机数的最小值，随机数将包含此值。 （此参数可选）"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:299
msgid "max - 随机数的最大值，随机数不包含此值。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:301
msgid "返回"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:303
msgid "min和max-1之间的随机数（ 数据类型为long ）"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:306
msgid "约束(constrain)"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:311
#: ../../source/arduino/04.Mathematics.rst:336
msgid "约束是将数值限制在最小值与最大值之间，所有小于最小值的数值被赋值为最小值，同理，所有大于最大值的数被赋值为最大值。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:315
#: ../../source/arduino/04.Mathematics.rst:340
msgid "x：要被约束的数字，所有的数据类型适用。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:317
#: ../../source/arduino/04.Mathematics.rst:342
msgid "a：该范围的最小值，所有的数据类型适用。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:319
#: ../../source/arduino/04.Mathematics.rst:344
msgid "b：该范围的最大值，所有的数据类型适用。"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:323
#: ../../source/arduino/04.Mathematics.rst:348
msgid "x：如果 x是介于 a 和 b之间"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:325
#: ../../source/arduino/04.Mathematics.rst:350
msgid "a：如果 x小于a"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:327
#: ../../source/arduino/04.Mathematics.rst:352
msgid "b：如果 x大于b"
msgstr ""

#: ../../source/arduino/04.Mathematics.rst:331
msgid "映射(map)"
msgstr ""

#~ msgid "数学"
#~ msgstr ""

#~ msgid ""
#~ "随机数是一个左闭右开的取值范围。也就是较小的数可以取到，较大的数无法取到。 约束 ------------ "
#~ ".. image:: images/04/math3.png"
#~ msgstr ""

#~ msgid ""
#~ "约束是将数值限制在最小值与最大值之间，所有小于最小值的数值被赋值为最小值，同理，所有大于最大值的数被赋值为最大值。 映射 "
#~ "------------------ .. image:: images/04/math4.png"
#~ " .. image:: images/04/math5.png "
#~ "上图为LED与蜂鸣器同步增大或减小的代码。因为对于sin(i)来说，其值域为正数时i的取值范围为[0,180]，不过对于LED的呼吸灯来说，最大值可以取到255，因此在这里运用一个映射，即使i因循环本身最大只能取到179，但通过一一映射，i的实际值可以取到[0,255]。"
#~ msgstr ""

#~ msgid "数学(普通视图)"
#~ msgstr ""

#~ msgid "三角函数"
#~ msgstr ""

#~ msgid "取最大(小)值"
#~ msgstr ""

#~ msgid "初始化随机数"
#~ msgstr ""

#~ msgid "随机数"
#~ msgstr ""

#~ msgid "随机数是一个左闭右开的取值范围。也就是较小的数可以取到，较大的数无法取到。"
#~ msgstr ""

#~ msgid "约束"
#~ msgstr ""

#~ msgid "映射"
#~ msgstr ""

#~ msgid "上图为LED与蜂鸣器同步增大或减小的代码。因为对于sin(i)来说，其值域为正数时i的取值范围为[0,180]，不过对于LED的呼吸灯来说，最大值可以取到255，因此在这里运用一个映射，即使i因循环本身最大只能取到179，但通过一一映射，i的实际值可以取到[0,255]。"
#~ msgstr ""

