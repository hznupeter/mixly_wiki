# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Mixly Team
# This file is distributed under the same license as the Mixly Wiki package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mixly Wiki 0.999\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-15 19:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/basic/24.Example.rst:2
msgid "范例"
msgstr ""

#: ../../source/basic/24.Example.rst:3
msgid ""
"创客教育的核心不是知识的重复复制或复杂功能的底层实现，而是激发学生的创新并享受分享所带来的快乐。基于Mixly的创意电子课程也要遵循这样的理念。遂从Mixly的技术特点出发，将Mixly的应用模式分为以下几类："
" ### 模仿延展类 该模式主要用于Mixly初学者学习创意电子的基础知识，其具体步骤如下： * 由教师创设情境，并提出本次课（活动）的具体任务；"
" * 启发学生思考，得出实现本任务的基本思路并鼓励学生尝试实现； * 教师给出参考实例，学生基于教师的代码模仿完成； * "
"教师给出扩展任务方向，引导学生修改原有的代码实现。"
msgstr ""

#: ../../source/basic/24.Example.rst:11
msgid "下面以《两只老虎》为例描述这一过程。本课的目标是让学生学会使用蜂鸣器播放简单的音乐。首先，教师需要讲解基本乐理知识及Mixly中声音的播放方法，然后引导学生思考并鼓励学生尝试实现。在实际教学中，学生最初的实现过于浅显，与目标任务相差甚远。在给出合适的鼓励后再给出如图4-1所示的实现方式（使用四个数组分别用来表示基本音阶、音乐的音高、变调和时长），并引导学生进行模仿。模仿成功后，教师需要讲解实现的基本原理并给出延伸任务，让学生设计更复杂的音乐。事实上，学生只需简单地修改数组就可以播放出不同的音乐。"
msgstr ""

#: ../../source/basic/24.Example.rst:16
msgid "创意整合类"
msgstr ""

#: ../../source/basic/24.Example.rst:17
msgid ""
"该模式主要用于具有一定Mixly基础的学生针对某一技术的创意整合应用，其具体步骤如下： * 由教师创设情境，并提出一个特定的功能需求； * "
"启发学生思考，得出实现功能的基本思路； * 教师给出功能的具体实现模块，学生导入并体验； * 激发学生创新，结合本模块和先前知识给出创意应用。"
msgstr ""

#: ../../source/basic/24.Example.rst:23
msgid "下面以《语音温度计》为例描述这一过程。本课的目标是实现低成本的人机交互。首先，教师抛出问题：如何才能让用户知道Arduino中的结果数据?学生一般会给出各种各样的答案，教师在给出合理的正向反馈后分析各种答案的可行性，并引导学生提出通过蜂鸣器播报数据的方案。在此基础上，给出相应的扩展库让学生尝试使用（一般不建议让学生理解该库的实现原理，只需会用即可）。然后，教师需要激发学生思考如何利用该库完成创新应用。图4-2给出了一个语音温度计的Mixly实现（LM35和A0相连，蜂鸣器和10号管脚相连），图4-3则是语音播报库的具体实现。"
msgstr ""

#: ../../source/basic/24.Example.rst:30
msgid "协同合作类"
msgstr ""

#: ../../source/basic/24.Example.rst:31
msgid ""
"该模式主要用于Mixly专业学习者协同完成综合性任务，其具体步骤如下： * 学生以小组为单位，通过协商得出要做的综合任务目标； * "
"教师在听取学生的汇报后，给出项目的可行性评估及实现建议； * 学生在教师的帮助下完成基于模块的任务分工并实现最初的设计； * "
"小组汇总程序、进行调试，并完成最终成果的展示。"
msgstr ""

#: ../../source/basic/24.Example.rst:37
msgid ""
"下面以在中学讲授《创意电子》课程的一个小组综合项目为例，描述这一过程。本课的目标是使学生综合运用元件和所学知识开发出一个创意作品。此前，教师应讲解在复杂的程序设计中代码模块化的意义，并给出一些具体的例子。在此基础上，学生自愿结为两人小组，提出创意。此处仅以其中一组学生设计并实现的温控报警散热器为例，描述后续过程。小组成员提出，使用温度传感器、蜂鸣器、LED灯、数码管等元件制作一个具有显示温度和报警功能的散热器。学生描述功能并进一步对其进行分解，除了使用到教师提供的一位共阳数码管库外，还构建了呈现彩色灯（colorRGB）、电扇开关控制（fan）、声光报警（ring）、获取温度（getTem）四个函数。"
" "
"开发过程灵活使用了Mixly的导入/导出库功能：一位同学负责物理连接和四个子函数的编写并使用“导出库”功能将其导出成库文件，另一位同学负责基于功能描述设计整体逻辑并在导入该文件后完成主函数的编写。图4-4、图4-5分别是该作品的库文件代码和主程序代码，图4-6是该作品的实物图。"
msgstr ""

